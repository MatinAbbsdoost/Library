@model Library.Models.Author

@{
    ViewData["Title"] = "Edit";

    List<SelectListItem>? author = ViewData["Author"] is not null
       ? ViewData["Author"] as List<SelectListItem> : new();
}

<h1>Register</h1>

<h4>Author</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-controller="Author">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />


            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
          
            
           
            @if (Model.Id == 0)
            {
                <div class="form-group">
                    <input type="submit" value="Save" action="Create" class="btn btn-primary" />
                </div>
            }
            else
            {
                <div class="form-group">
                    <input type="submit" value="Save" action="Edit" class="btn btn-primary" />
                </div>
            }
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
